/* tslint:disable */
/* eslint-disable */


/**
 * AUTO-GENERATED FILE - DO NOT EDIT!
 *
 * This file was automatically generated by pg-to-ts v.4.1.0
 * $ pg-to-ts generate -c postgresql://username:password@localhost:5432/inventoria -t categories -t materials -t suppliers -t users -t warehouses -s public
 *
 */


export type Json = unknown;

// Table categories
export interface Categories {
  id: number;
  category_name: string | null;
  workspace_id: string | null;
}
export interface CategoriesInput {
  id?: number;
  category_name?: string | null;
  workspace_id?: string | null;
}
const categories = {
  tableName: 'categories',
  columns: ['id', 'category_name', 'workspace_id'],
  requiredForInsert: [],
  primaryKey: 'id',
  foreignKeys: { workspace_id: { table: 'users', column: 'workspace_id', $type: null as unknown as Users }, },
  $type: null as unknown as Categories,
  $input: null as unknown as CategoriesInput
} as const;

// Table materials
export interface Materials {
  id: number;
  material_name: string | null;
  last_update: Date | null;
  quantity: number | null;
  price: number | null;
  minimum_quantity: number | null;
  workspace_id: string | null;
  warehouse_id: number | null;
  category_id: number | null;
  supplier_id: number | null;
}
export interface MaterialsInput {
  id?: number;
  material_name?: string | null;
  last_update?: Date | null;
  quantity?: number | null;
  price?: number | null;
  minimum_quantity?: number | null;
  workspace_id?: string | null;
  warehouse_id?: number | null;
  category_id?: number | null;
  supplier_id?: number | null;
}
const materials = {
  tableName: 'materials',
  columns: ['id', 'material_name', 'last_update', 'quantity', 'price', 'minimum_quantity', 'workspace_id', 'warehouse_id', 'category_id', 'supplier_id'],
  requiredForInsert: [],
  primaryKey: 'id',
  foreignKeys: {
    workspace_id: { table: 'users', column: 'workspace_id', $type: null as unknown as Users },
    warehouse_id: { table: 'warehouses', column: 'id', $type: null as unknown as Warehouses },
    category_id: { table: 'categories', column: 'id', $type: null as unknown as Categories },
    supplier_id: { table: 'suppliers', column: 'id', $type: null as unknown as Suppliers },
  },
  $type: null as unknown as Materials,
  $input: null as unknown as MaterialsInput
} as const;

// Table suppliers
export interface Suppliers {
  id: number;
  supplier_name: string | null;
  workspace_id: string | null;
}
export interface SuppliersInput {
  id?: number;
  supplier_name?: string | null;
  workspace_id?: string | null;
}
const suppliers = {
  tableName: 'suppliers',
  columns: ['id', 'supplier_name', 'workspace_id'],
  requiredForInsert: [],
  primaryKey: 'id',
  foreignKeys: { workspace_id: { table: 'users', column: 'workspace_id', $type: null as unknown as Users }, },
  $type: null as unknown as Suppliers,
  $input: null as unknown as SuppliersInput
} as const;

// Table users
export interface Users {
  workspace_id: string;
  unique_id: string | null;
  email_id: string;
  password: string;
  fullname: string | null;
  position: string | null;
  joining_date: Date | null;
}
export interface UsersInput {
  workspace_id?: string;
  unique_id?: string | null;
  email_id: string;
  password: string;
  fullname?: string | null;
  position?: string | null;
  joining_date?: Date | null;
}
const users = {
  tableName: 'users',
  columns: ['workspace_id', 'unique_id', 'email_id', 'password', 'fullname', 'position', 'joining_date'],
  requiredForInsert: ['email_id', 'password'],
  primaryKey: 'workspace_id',
  foreignKeys: {},
  $type: null as unknown as Users,
  $input: null as unknown as UsersInput
} as const;

// Table warehouses
export interface Warehouses {
  id: number;
  warehouse_name: string | null;
  workspace_id: string | null;
}
export interface WarehousesInput {
  id?: number;
  warehouse_name?: string | null;
  workspace_id?: string | null;
}
const warehouses = {
  tableName: 'warehouses',
  columns: ['id', 'warehouse_name', 'workspace_id'],
  requiredForInsert: [],
  primaryKey: 'id',
  foreignKeys: { workspace_id: { table: 'users', column: 'workspace_id', $type: null as unknown as Users }, },
  $type: null as unknown as Warehouses,
  $input: null as unknown as WarehousesInput
} as const;


export interface TableTypes {
  categories: {
    select: Categories;
    input: CategoriesInput;
  };
  materials: {
    select: Materials;
    input: MaterialsInput;
  };
  suppliers: {
    select: Suppliers;
    input: SuppliersInput;
  };
  users: {
    select: Users;
    input: UsersInput;
  };
  warehouses: {
    select: Warehouses;
    input: WarehousesInput;
  };
}

export const tables = {
  categories,
  materials,
  suppliers,
  users,
  warehouses,
}
