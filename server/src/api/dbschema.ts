/* tslint:disable */
/* eslint-disable */

/**
 * AUTO-GENERATED FILE - DO NOT EDIT!
 *
 * This file was automatically generated by pg-to-ts v.4.1.0
 *
 */

export type Json = unknown;

// Table categories
export interface Categories {
  id: number;
  category_name: string | null;
}
export interface CategoriesInput {
  id?: number;
  category_name?: string | null;
}
export const categories = {
  tableName: "categories",
  columns: ["id", "category_name"],
  requiredForInsert: [],
  primaryKey: "id",
  foreignKeys: {},
  $type: null as unknown as Categories,
  $input: null as unknown as CategoriesInput,
} as const;

// Table materials
export interface Materials {
  id: number;
  material_name: string | null;
  last_update: Date | null;
  quantity: number | null;
  price: number | null;
  category_id: number | null;
  warehouse_id: number | null;
  received_by: number | null;
  supplier_id: number | null;
}
export interface MaterialsInput {
  id?: number;
  material_name?: string | null;
  last_update?: Date | null;
  quantity?: number | null;
  price?: number | null;
  minimum_quantity?: number | null;
  category_id?: number | null;
  warehouse_id?: number | null;
  received_by?: number | null;
  supplier_id?: number | null;
}
export const materials = {
  tableName: "materials",
  columns: [
    "id",
    "material_name",
    "last_update",
    "quantity",
    "price",
    "minimum_quantity",
    "category_id",
    "warehouse_id",
    "received_by",
    "supplier_id",
  ],
  requiredForInsert: [],
  primaryKey: "id",
  foreignKeys: {
    category_id: {
      table: "categories",
      column: "id",
    },
    warehouse_id: {
      table: "warehouses",
      column: "id",
    },
    received_by: {
      table: "users",
      column: "id",
    },
    supplier_id: {
      table: "suppliers",
      column: "id",
    },
  },
  $type: null as unknown as Materials,
  $input: null as unknown as MaterialsInput,
};

// Table suppliers
export interface Suppliers {
  id: number;
  supplier_name: string | null;
}
export interface SuppliersInput {
  id?: number;
  supplier_name?: string | null;
}
export const suppliers = {
  tableName: "suppliers",
  columns: ["id", "supplier_name"],
  requiredForInsert: [],
  primaryKey: "id",
  foreignKeys: {},
  $type: null as unknown as Suppliers,
  $input: null as unknown as SuppliersInput,
} as const;

// Table users
export interface Users {
  id: number;
  email_id: string;
  username: string;
  password: string;
  fullname: string | null;
  position: string | null;
  joining_date: Date | null;
}
export interface UsersInput {
  id?: number;
  email_id?: string;
  username?: string;
  password?: string;
  fullname?: string | null;
  position?: string | null;
  joining_date?: Date | null;
}
export const users = {
  tableName: "users",
  columns: [
    "id",
    "email_id",
    "username",
    "password",
    "fullname",
    "position",
    "joining_date",
  ],
  requiredForInsert: [],
  primaryKey: "id",
  foreignKeys: {},
  $type: null as unknown as Users,
  $input: null as unknown as UsersInput,
} as const;

// Table warehouses
export interface Warehouses {
  id: number;
  warehouse_name: string | null;
}
export interface WarehousesInput {
  id?: number;
  warehouse_name?: string | null;
}
export const warehouses = {
  tableName: "warehouses",
  columns: ["id", "warehouse_name"],
  requiredForInsert: [],
  primaryKey: "id",
  foreignKeys: {},
  $type: null as unknown as Warehouses,
  $input: null as unknown as WarehousesInput,
} as const;

export interface TableTypes {
  categories: {
    select: Categories;
    input: CategoriesInput;
  };
  materials: {
    select: Materials;
    input: MaterialsInput;
  };
  suppliers: {
    select: Suppliers;
    input: SuppliersInput;
  };
  users: {
    select: Users;
    input: UsersInput;
  };
  warehouses: {
    select: Warehouses;
    input: WarehousesInput;
  };
}

export type AllTablesType =
  | Categories
  | Warehouses
  | Materials
  | Users
  | Suppliers;

export const tables = {
  categories,
  materials,
  suppliers,
  users,
  warehouses,
};
